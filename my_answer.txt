1. 수정 및 삭제 API에서 Resource를 구분하기 위해서 어떤 방식으로 요청(Request) 하셨나요? (`param`, `query`, `body`)
-> 해당하는 id 값의 상품이 존재하는지 확인하기 위해 params를 사용하였고 수정 시에는 수정하려는 내용을 body에 담았습니다.

2. 대표적인 HTTP Method의 4가지( `GET`, `POST`, `PUT`, `DELETE` )는 각각 어떤 상황에서 사용하였나요?
 - 데이터 조회, 상세조회 : GET
 - 데이터 입력: POST
 - 데이터 수정: PUT
 - 데이터 삭제: DELETE

3. API 설계 시 RESTful한 원칙을 따랐나요? 어떤 부분이 RESTful한 설계를 반영하였고, 어떤 부분이 그렇지 않았나요?
-> 소문자를 사용하였고, 마지막에 슬래시(/)를 포함하지 않으려 했다. 명사형, 복수형으로 url을 작성했다.

4. 폴더 구조(Directory Structure)를 역할별로 분리하였다면, 어떤 이점을 가져다 주었을까요?
-> 보다 명확하게 구조를 파악할 수 있어 유지, 보수에 좋습니다. 

5. `mongoose`에서 상품 상태는 어떠한 방식으로 관리하였나요? 이 외에도 어떤 방법들이 있었을까요?
-> 모델링을 할 때 type: Boolean 으로 선언해 true, false 만으로 작성하게 했습니다. 
-> 그 후 함수를 활용해 get 요청 시 true, false 값에 따라 상품상태를 판매중, 판매완료로 변환해주도록 했습니다.
-> 맞는지는 모르겠으나 스키마나 다큐먼트에 사용자 정의 메소드를 붙일 수 있다고 합니다. 사용법을 알아봐야겠습니다.